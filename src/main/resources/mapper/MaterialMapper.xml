<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdm.dao.MaterialMapper" >
  <resultMap id="BaseResultMap" type="com.cdm.model.Material" >
    <id column="material_id" property="materialId" jdbcType="INTEGER" />
    <result column="material_name" property="materialName" jdbcType="VARCHAR" />
    <result column="material_price" property="materialPrice" jdbcType="REAL" />
    <result column="material_size" property="materialSize" jdbcType="REAL" />
    <result column="material_desc" property="materialDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    material_id, material_name, material_price, material_size, material_desc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cdm.model.MaterialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from material
    where material_id = #{materialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from material
    where material_id = #{materialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdm.model.MaterialExample" >
    delete from material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdm.model.Material" >
    insert into material (material_id, material_name, material_price, 
      material_size, material_desc)
    values (#{materialId,jdbcType=INTEGER}, #{materialName,jdbcType=VARCHAR}, #{materialPrice,jdbcType=REAL}, 
      #{materialSize,jdbcType=REAL}, #{materialDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cdm.model.Material" >
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="materialName != null" >
        material_name,
      </if>
      <if test="materialPrice != null" >
        material_price,
      </if>
      <if test="materialSize != null" >
        material_size,
      </if>
      <if test="materialDesc != null" >
        material_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="materialId != null" >
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="materialName != null" >
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="materialPrice != null" >
        #{materialPrice,jdbcType=REAL},
      </if>
      <if test="materialSize != null" >
        #{materialSize,jdbcType=REAL},
      </if>
      <if test="materialDesc != null" >
        #{materialDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdm.model.MaterialExample" resultType="java.lang.Integer" >
    select count(*) from material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update material
    <set >
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=INTEGER},
      </if>
      <if test="record.materialName != null" >
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.materialPrice != null" >
        material_price = #{record.materialPrice,jdbcType=REAL},
      </if>
      <if test="record.materialSize != null" >
        material_size = #{record.materialSize,jdbcType=REAL},
      </if>
      <if test="record.materialDesc != null" >
        material_desc = #{record.materialDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update material
    set material_id = #{record.materialId,jdbcType=INTEGER},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      material_price = #{record.materialPrice,jdbcType=REAL},
      material_size = #{record.materialSize,jdbcType=REAL},
      material_desc = #{record.materialDesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdm.model.Material" >
    update material
    <set >
      <if test="materialName != null" >
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="materialPrice != null" >
        material_price = #{materialPrice,jdbcType=REAL},
      </if>
      <if test="materialSize != null" >
        material_size = #{materialSize,jdbcType=REAL},
      </if>
      <if test="materialDesc != null" >
        material_desc = #{materialDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdm.model.Material" >
    update material
    set material_name = #{materialName,jdbcType=VARCHAR},
      material_price = #{materialPrice,jdbcType=REAL},
      material_size = #{materialSize,jdbcType=REAL},
      material_desc = #{materialDesc,jdbcType=VARCHAR}
    where material_id = #{materialId,jdbcType=INTEGER}
  </update>
</mapper>